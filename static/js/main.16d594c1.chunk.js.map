{"version":3,"sources":["util/Hooks.ts","common/Background.tsx","util/Encryption.ts","services/Command.ts","Context.tsx","common/FocusGroup.tsx","util/Helpers.ts","common/Terminal.tsx","common/Window.tsx","resume/ResumePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useWindowWidth","useState","window","innerWidth","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","useIsMobile","useWindowHeight","innerHeight","height","setHeight","Background","style","canvas","useRef","matrix","drops","backgroundState","setBackgroundState","currentCanvas","current","initializedState","c","ctx","getContext","split","columns","fontSize","rows","fillStyle","textColor","font","i","j","text","Math","floor","random","length","fillText","init","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","updatedState","state","backgroundColor","fillRect","update","ref","decrypt","encrypted","secret","AES","toString","enc","Utf8","e","StaticContentCommandProcessor","exitCallbacks","commandHistory","fetchAndDecrypt","command","mobile","key","a","fetch","content","startsWith","replace","url","then","r","status","handleLogin","args","sessionStorage","setItem","btoa","handleLogout","removeItem","handleExit","issuer","registerExit","unregisterExit","execute","track","atob","getItem","isCommandValid","trim","push","Promise","resolve","getAvailableCommands","getHistoryLength","getHistoryAtPos","pos","index","CommandProcessorBuilder","CommandContext","React","createContext","FocusGroup","props","selected","setSelected","children","setChildren","map","cloneElement","zIndex","windowId","onSelected","moveCursorToEnd","node","childNodes","range","document","createRange","sel","getSelection","setStart","hasChildNodes","collapse","removeAllRanges","addRange","console","warn","Terminal","prompt","welcomePrompt","setWelcomePrompt","historyPos","sethistoryPos","commands","setCommands","commandProcessor","useContext","welcome","focus","load","handleCommand","appendCommand","setAttribute","innerHTML","output","execCommand","lastElementChild","scrollIntoView","String","getCommandFromHistory","up","lastCommand","handleKeyDown","event","innerText","currentTarget","keyCode","trimEnd","endsWith","preventDefault","commandText","getCommand","parseCommand","elements","slice","substring","lastIndexOf","className","spellCheck","contentEditable","onKeyDown","onFocus","dangerouslySetInnerHTML","__html","onClick","Window","dragging","setDragging","x","y","rel","setRel","setPos","setState","resizing","setResizing","onWindowSelected","onMouseUp","onMouseMove","pageX","pageY","onTouchMove","changedTouches","unregisterListeners","left","top","onMouseDown","onTouchStart","size","onResizeStart","onResize","direction","_","delta","clientX","NaN","clientY","MouseEvent","touches","selection","onResizeStop","d","button","offsetLeft","offsetTop","calcRelMouseEvent","calcRelTouchEvent","title","overflow","FixedWindow","library","add","fab","fas","ResumePage","windows","setWindows","handleNew","uuid","terminal","isMobile","windowWidth","windowHeight","filter","handleNewCallback","useCallback","loginCode","URL","location","href","searchParams","get","area","icon","App","appRef","createBrowserHistory","history","getComputedStyle","documentElement","getPropertyValue","Provider","value","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","process","origin","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.16d594c1.chunk.js","sourcesContent":["import { useRef, useEffect, useState } from \"react\";\n\nexport function useInterval(callback: () => void, delay: number) {\n  const savedCallback = useRef<() => void>(callback);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport function useWindowWidth() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return width;\n}\n\nexport function useIsMobile() {\n  return useWindowWidth() < 600\n}\n\nexport function useWindowHeight() {\n  const [height, setHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    const handleResize = () => setHeight(window.innerHeight);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return height;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useInterval, useWindowHeight, useWindowWidth } from \"../util/Hooks\";\nimport \"./Background.css\";\n\nconst CHARACTERS = \"ガノンの形態によってステップを分けた方がいいかも\";\n\ninterface BackgroundProps {\n  backgroundColor: string,\n  textColor: string,\n  fontSize: number\n}\n\ninterface BackgroundState {\n  matrix: string[],\n  drops: number[]\n}\n\nconst update = (c: HTMLCanvasElement, style: BackgroundProps, state: BackgroundState) => {\n  var ctx = c.getContext(\"2d\");\n\n  if (ctx == null) {\n    return { matrix: [], drops: []};\n  }\n\n  ctx.fillStyle = `rgba(${style.backgroundColor}, 0.04)`;\n  ctx.fillRect(0, 0, c.width, c.height);\n\n  ctx.fillStyle = `rgba(${style.textColor}, 1)`;\n  ctx.font = style.fontSize + \"px arial\";\n\n  for (let i = 0; i < state.drops.length; i++) {\n    const text = state.matrix[Math.floor(Math.random() * state.matrix.length)];\n\n    ctx.fillText(text, i * style.fontSize, state.drops[i] * style.fontSize);\n\n    if (state.drops[i] * style.fontSize > c.height && Math.random() > 0.975) state.drops[i] = 0;\n\n    state.drops[i]++;\n  }\n\n  return state;\n};\n\nconst init = (c: HTMLCanvasElement, style: BackgroundProps) => {\n  var ctx = c.getContext(\"2d\");\n\n  if (ctx == null) {\n    return { matrix: [], drops: []};\n  }\n\n  const matrix: string[] = CHARACTERS.split(\"\");\n  const columns = c.width / style.fontSize;\n  const rows = c.height / style.fontSize;\n\n  const drops: number[] = [];\n\n  ctx.fillStyle = `rgba(${style.textColor}, 0.04)`;\n  ctx.font = style.fontSize + \"px arial\";\n\n  for (let i = 0; i < columns; i++) {\n    drops[i] = rows;\n\n    for (var j = 0; j < rows; j++) {\n      const text = matrix[Math.floor(Math.random() * matrix.length)];\n      ctx.fillText(text, i * style.fontSize, j * style.fontSize);\n    }\n  }\n\n  return { matrix, drops }\n}\n\nexport const Background = ( style : BackgroundProps) => {\n  \n  let canvas = useRef<HTMLCanvasElement>(null);\n  let width = useWindowWidth();\n  let height = useWindowHeight();\n  let [backgroundState, setBackgroundState] = useState<BackgroundState>({ matrix: [], drops: [] })\n\n  useEffect(() => {\n    const currentCanvas = canvas && canvas.current\n    if (currentCanvas) {\n      const initializedState = init(currentCanvas, style);\n      setBackgroundState(initializedState);\n    }\n  }, [style]);\n\n  useInterval(() => {\n    const currentCanvas = canvas && canvas.current\n    if (currentCanvas) {\n      const updatedState = update(currentCanvas, style, backgroundState);\n      setBackgroundState(updatedState)\n    }\n  }, 35);\n\n  return (\n    <canvas ref={canvas} id={`matrix`} width={width} height={height}></canvas>\n  );\n};\n","import { AES } from \"crypto-ts\";\nimport { enc } from \"crypto-ts\";\n\nexport const decrypt = (encrypted: string, secret: string) => {\n  try {\n    return AES.decrypt(encrypted, secret).toString(enc.Utf8);\n  } catch (e) {\n    return \"\";\n  }\n};\n","import { decrypt } from \"../util/Encryption\";\n\nexport interface CommandProcessor {\n  execute: (\n    issuer: string,\n    command: string,\n    mobile: boolean,\n    track: boolean,\n    args?: string[]\n  ) => Promise<string>;\n  getHistoryAtPos: (pos: number) => string | undefined;\n  getHistoryLength: () => number\n  getAvailableCommands: () => Promise<string[]>\n  registerExit: (issuer: string, callback: (issuer: string) => void) => void;\n  unregisterExit: (issuer: string) => void;\n}\n\nclass StaticContentCommandProcessor implements CommandProcessor {\n  exitCallbacks: { [key: string]: (issuer: string) => void } = {};\n  commandHistory: string[] = []\n  encrypted: string[] = [\"experience\", \"skills\", \"profile\", \"picture\", \"languages\"]\n\n  private fetchAndDecrypt = async (\n    command: string,\n    mobile: boolean,\n    key: string\n  ) => {\n    const content = await this.fetch(command, mobile);\n    if (content.startsWith(\"encrypted:\")) {\n      return decrypt(content.replace(\"encrypted:\", \"\"), key) || \"Unauthorized\";\n    }\n    return content;\n  };\n\n  private fetch = (command: string, mobile: boolean) => {\n    const url = mobile ? `./c_${command}_small.html` : `./c_${command}.html`;\n    return fetch(url).then((r) => r.status < 300 ? r.text() : `${command}: command not found<br/>`);\n  };\n\n  private handleLogin = async (args?: string[]) => {\n    if (args && args.length > 0) {\n      const result = await this.fetchAndDecrypt(\"check\", false, args[0]);\n      if (result === \"OK\") {\n        sessionStorage.setItem(\"aesKey\", btoa(args[0]));\n        return \"Login successful\"\n      }\n      return \"Unauthorized\";\n    }\n    return \"Usage: login [decrytionKey]\";\n  };\n\n  private handleLogout = (args?: string[]) => {\n    sessionStorage.removeItem(\"aesKey\");\n    return \"You are now logged out\";\n  };\n\n  private handleExit = (issuer: string) => {\n    const callback = this.exitCallbacks[issuer];\n    callback && callback(issuer);\n    return \"session closed\";\n  };\n\n  public registerExit = (\n    issuer: string,\n    callback: (issuer: string) => void\n  ) => {\n    this.exitCallbacks[issuer] = callback;\n  };\n\n  public unregisterExit = (issuer: string) => {\n    delete this.exitCallbacks[issuer];\n  };\n\n  public execute = async (\n    issuer: string,\n    command: string,\n    mobile: boolean,\n    track: boolean,\n    args?: string[]\n  ): Promise<string> => {\n    const key = atob(sessionStorage.getItem(\"aesKey\") || \"\");\n    const isCommandValid = command.trim() !== \"\"\n    if (track && isCommandValid) {\n      this.commandHistory.push(command);\n    }\n\n    switch (true) {\n      case command === \"login\":\n        return this.handleLogin(args);\n      case command === \"logout\":\n        return this.handleLogout(args);\n      case command === \"exit\":\n        return !mobile ? this.handleExit(issuer) : Promise.resolve(\"\");\n      default:\n        return this.fetchAndDecrypt(command, mobile, key);\n    }\n  };\n\n  public getAvailableCommands = async () => await fetch('./commands.txt')\n    .then((r) => r.status < 300 ? r.text() : '')\n    .then(text => text.split('\\n'));\n\n  public getHistoryLength = () => this.commandHistory.length\n\n  public getHistoryAtPos = (pos: number) => {\n    const index = this.commandHistory.length - 1 - pos;\n    if (index < 0) {\n      return undefined;\n    }\n    return this.commandHistory[index];\n  }\n}\n\nexport const CommandProcessorBuilder = {\n  build: (): CommandProcessor => {\n    return new StaticContentCommandProcessor();\n  },\n};\n","import React from \"react\";\nimport { CommandProcessor, CommandProcessorBuilder } from \"./services/Command\";\nexport const CommandContext = React.createContext<CommandProcessor>(\n  CommandProcessorBuilder.build()\n);\n","import React, { ReactElement, useState, useEffect } from \"react\";\n\ninterface Props {\n  children: ReactElement[];\n}\nexport const FocusGroup = (props: Props) => {\n  const [selected, setSelected] = useState<string>();\n  const [children, setChildren] = useState<ReactElement[]>([]);\n\n  useEffect(() => {\n    setChildren(props.children.map((c, i) =>\n      React.cloneElement(c, {\n        ...c.props,\n        style: {\n          ...c.props.style,\n          zIndex: c.props.windowId === selected ? 200 : 100 + i,\n        },\n        onSelected: (key: string) => {\n          setSelected(key);\n        },\n      })\n    ))  \n  }, [props.children, selected])\n\n  return (\n    <>\n      {children}\n    </>\n  );\n};\n","\nexport const moveCursorToEnd = (e: HTMLDivElement | null) => {\n    if (e) {\n      try {\n        // get last line from the terminal\n        const node = e.childNodes[e.childNodes.length - 1];\n        const range = document.createRange();\n        const sel = window.getSelection();\n        if (node) {\n          range.setStart(\n            node,\n            node.hasChildNodes() ? node.childNodes.length : 1\n          );\n          range.collapse(true);\n          sel && sel.removeAllRanges();\n          sel && sel.addRange(range);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  };","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { CommandContext } from \"../Context\";\nimport { useIsMobile } from \"../util/Hooks\";\nimport \"./Terminal.css\";\nimport { moveCursorToEnd } from \"../util/Helpers\";\n\nconst wrapPre = (text: string) => `<pre style=\"display: inline;\">${text}</pre>`;\n\nconst promptPath =\n  '<span class=\"white bold\">:</span>' +\n  '<span class=\"blue bold\">~</span>' +\n  '<span class=\"white bold\">$</span>';\n\nexport interface TerminalProps {\n  windowId: string;\n  prompt: string;\n  welcome: boolean;\n}\n\nexport const Terminal = (props: TerminalProps) => {\n  const server = `<span class=\"bold\">${props.prompt}</span>`;\n  const prompt = \"<span class=\\\"prompt\\\">\" + server + promptPath + wrapPre(\" \") + \"</span>\";\n\n  const [welcomePrompt, setWelcomePrompt] = useState<string>();\n  const [historyPos, sethistoryPos] = useState<number>(-1)\n  const [commands, setCommands] = useState<string[]>([]);\n  const ref = useRef<HTMLDivElement>(null);\n  const commandProcessor = useContext(CommandContext);\n  const mobile = useIsMobile();\n\n  useEffect(() => {\n    const load = async () => {\n      setWelcomePrompt(\n        props.welcome\n          ? `${await commandProcessor.execute(\n            props.windowId,\n            \"welcome\",\n            mobile,\n            false\n          )}<br/>`\n          : \"\"\n      );\n      setCommands(await commandProcessor.getAvailableCommands())\n      ref.current?.focus();\n      moveCursorToEnd(ref.current);\n    };\n    load();\n  }, [welcomePrompt, commandProcessor, props.welcome, props.windowId, mobile]);\n\n  const handleCommand = async (command: string, args: string[], appendCommand?: boolean) => {\n    command = command.trim()\n    ref.current?.setAttribute('contentEditable', \"true\")\n\n    switch (command) {\n      case \"clear\":\n        ref.current!.innerHTML = prompt;\n        break;\n      default:\n        let output = await commandProcessor.execute(\n          props.windowId,\n          command,\n          mobile,\n          true,\n          args\n        );\n\n        document.execCommand(\n          \"insertHTML\",\n          false,\n          `${appendCommand ? `<pre style=\"display: inline;\">${command}</pre>` : ''}<br/><div class=\"command-output\">${output}</div><br/>${prompt}`\n        );\n\n        if (ref && ref.current) {\n          ref.current.lastElementChild!.scrollIntoView();\n        }\n    }\n\n    ref.current?.setAttribute('contentEditable', String(!mobile))\n\n    sethistoryPos(-1)\n    moveCursorToEnd(ref.current);\n  };\n\n  const getCommandFromHistory = (up: boolean) => {\n\n    let pos = historyPos\n    if (up && historyPos < commandProcessor.getHistoryLength() - 1) {\n      pos = historyPos + 1\n    } else if (!up && historyPos >= 0) {\n      pos = historyPos - 1\n    }\n\n    if (ref.current && ref.current.children && ref.current.children.length > 0) {\n      const lastCommand = commandProcessor.getHistoryAtPos(pos)\n      const currentContent = ref.current!.children[ref.current?.children!.length - 1]\n      currentContent.innerHTML = prompt + (lastCommand || \"\")\n      if (ref && ref.current) {\n        ref.current.lastElementChild!.scrollIntoView();\n      }\n      moveCursorToEnd(ref.current);\n    }\n\n    sethistoryPos(pos)\n  }\n\n  const handleKeyDown = async (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const innerText = event.currentTarget.innerText;\n    switch (event.keyCode) {\n      case 8:\n      case 37:\n        if (innerText.trimEnd().endsWith(`${props.prompt}:~$`)) {\n          event.preventDefault();\n        }\n        break;\n      case 13:\n        const commandText = getCommand(innerText);\n        const command = parseCommand(commandText);\n        event.preventDefault();\n        await handleCommand(command.command, command.args);\n        break;\n      case 38:\n        getCommandFromHistory(true);\n        event.preventDefault();\n        break;\n      case 40:\n        getCommandFromHistory(false);\n        event.preventDefault();\n        break;\n    }\n  };\n\n  const parseCommand = (commandText: string) => {\n    const elements = commandText.split(\" \");\n    if (elements.length <= 0) return { command: \"\", args: [] };\n    return {\n      command: elements[0],\n      args: elements.slice(1).map((e) => e.trim()),\n    };\n  };\n\n  const getCommand = (innerText: string) => {\n    return innerText\n      .substring(\n        innerText.lastIndexOf(`${props.prompt}:~$`) +\n        `${props.prompt}:~$`.length\n      )\n      .trim();\n  };\n\n  return (\n    <div className=\"terminal\">\n      <div\n        ref={ref}\n        spellCheck=\"false\"\n        className=\"terminal-input\"\n        contentEditable={!mobile}\n        onKeyDown={handleKeyDown}\n        onFocus={() => {\n          moveCursorToEnd(ref.current);\n        }}\n        dangerouslySetInnerHTML={{ __html: `${welcomePrompt}${prompt}` }}\n      ></div>\n      <div className=\"commands\">\n        {commands.map(command => <button key={command} onClick={() => handleCommand(command, [], true)}>{command}</button>)}\n      </div>\n    </div>\n  );\n};\n","import { Resizable } from \"re-resizable\";\nimport React, {\n  CSSProperties,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState,\n  Key,\n} from \"react\";\nimport \"./Window.css\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport SimpleBar from \"simplebar-react\";\n\nexport interface WindowProps {\n  width?: number;\n  height?: number;\n  windowId: string;\n  title?: string;\n  onSelected?: (key?: Key) => void;\n  pos?: {\n    x: number;\n    y: number;\n  };\n  children?: ReactNode;\n  style?: CSSProperties;\n  resizing?: boolean;\n}\n\nexport const Window = (props: WindowProps) => {\n  const ref: React.RefObject<HTMLDivElement> = useRef(null);\n  const [dragging, setDragging] = useState(false);\n  const [rel, setRel] = useState({ x: 0, y: 0 });\n  const [pos, setPos] = useState(props.pos || { x: 0, y: 0 });\n  const [state, setState] = useState({\n    width: props.width || 0,\n    height: props.height || 0,\n  });\n  const [resizing, setResizing] = useState(false);\n\n  const calcRelMouseEvent = (e: any) => {\n    const offsetLeft = ref.current?.offsetLeft || 0;\n    const offsetTop = ref.current?.offsetTop || 0;\n    return {\n      x: e.pageX - offsetLeft,\n      y: e.pageY - offsetTop,\n    };\n  };\n\n  const calcRelTouchEvent = (e: any) => {\n    const offsetLeft = ref.current?.offsetLeft || 0;\n    const offsetTop = ref.current?.offsetTop || 0;\n\n    if (e.changedTouches.length > 0) {\n      return {\n        x: e.changedTouches[0].pageX - offsetLeft,\n        y: e.changedTouches[0].pageY - offsetTop,\n      };\n    }\n    return { x: 0, y: 0 };\n  };\n\n  const onWindowSelected = () => {\n    if (props.onSelected) {\n      props.onSelected(props.windowId);\n    }\n  };\n\n  const onMouseDown = (e: any) => {\n    if (resizing) return;\n    if (e.button !== 0) return;\n    const rel = calcRelMouseEvent(e);\n    setDragging(true);\n    setRel(rel);\n  };\n\n  const onTouchStart = (e: any) => {\n    if (resizing) return;\n    const rel = calcRelTouchEvent(e);\n    setDragging(true);\n    setRel(rel);\n    if (props.onSelected) {\n      props.onSelected(props.windowId);\n    }\n  };\n\n  const onMouseUp = (e: any) => {\n    setDragging(false);\n  };\n\n  const onMouseMove = (e: any) => {\n    if (resizing) return;\n    if (!dragging) return;\n    setPos({\n      x: e.pageX - rel.x,\n      y: e.pageY - rel.y,\n    });\n  };\n\n  const onTouchMove = (e: any) => {\n    if (!dragging) return;\n    if (e.changedTouches.length > 0) {\n      setPos({\n        x: e.changedTouches[0].pageX - rel.x,\n        y: e.changedTouches[0].pageY - rel.y,\n      });\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"touchmove\", onTouchMove);\n\n    const registerListeners = () => {\n      document.addEventListener(\"mouseup\", onMouseUp);\n      document.addEventListener(\"touchend\", onMouseUp);\n    };\n\n    const unregisterListeners = () => {\n      document.removeEventListener(\"mouseup\", onMouseUp);\n      document.removeEventListener(\"touchend\", onMouseUp);\n    };\n\n    if (dragging) {\n      registerListeners();\n    } else {\n      unregisterListeners();\n    }\n    return () => {\n      unregisterListeners();\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"touchmove\", onTouchMove);\n    };\n  });\n\n  useEffect(() => {\n    if(props.onSelected) {\n      props.onSelected(props.windowId);\n    }\n   // eslint-disable-next-line\n  }, [])\n\n  const createStyle = () => {\n    return { ...props.style, left: pos.x + \"px\", top: pos.y + \"px\" };\n  };\n\n  return (\n    <div\n      ref={ref}\n      className=\"window\"\n      style={createStyle()}\n      onMouseDown={onWindowSelected}\n      onTouchStart={onWindowSelected}\n    >\n      <Resizable\n        className=\"resizable\"\n        size={{ width: state.width, height: state.height }}\n        onResizeStart={() => {\n          setResizing(true);\n        }}\n        onResize={(e: any, direction, _, delta) => {\n          let clientX = NaN;\n          let clientY = NaN;\n\n          if (e instanceof MouseEvent) {\n            clientX = e.clientX;\n            clientY = e.clientY;\n          }\n\n          if (e.touches && e.touches.length > 0) {\n            clientX = e.touches[0].clientX;\n            clientY = e.touches[0].clientY;\n          }\n\n          if (direction === \"left\" || direction === \"bottomLeft\") {\n            setPos({ x: clientX, y: pos.y });\n          }\n          if (direction === \"top\" || direction === \"topRight\") {\n            setPos({ x: pos.x, y: clientY });\n          }\n          if (direction === \"topLeft\") {\n            setPos({ x: clientX, y: clientY });\n          }\n\n          const selection = window.getSelection();\n          if (selection) {\n            selection.removeAllRanges();\n          }\n        }}\n        onResizeStop={(e, direction, ref, d) => {\n          setState({\n            width: state.width + d.width,\n            height: state.height + d.height,\n          });\n          setResizing(false);\n        }}\n      >\n        <div className=\"container\">\n          <div\n            className=\"titlebar noselect\"\n            onMouseDown={onMouseDown}\n            onTouchStart={onTouchStart}\n          >\n            {props.title}\n          </div>\n          <SimpleBar\n            className=\"content\"\n            style={{ overflow: resizing ? \"hidden\" : \"auto\" }}\n          >\n            {props.children}\n          </SimpleBar>\n        </div>\n      </Resizable>\n    </div>\n  );\n};\n\nexport const FixedWindow = (props: WindowProps) => {\n  return (\n    <div className=\"window\" style={props.style}>\n      <div className=\"container\">\n        <div className=\"titlebar noselect\">{props.title}</div>\n        <SimpleBar className=\"content\">{props.children}</SimpleBar>\n      </div>\n    </div>\n  );\n};\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { ReactElement, useContext, useEffect, useState, useCallback } from \"react\";\nimport * as uuid from \"uuid\";\nimport { FocusGroup } from \"../common/FocusGroup\";\nimport { Terminal } from \"../common/Terminal\";\nimport { Window, WindowProps, FixedWindow } from \"../common/Window\";\nimport { CommandContext } from \"../Context\";\nimport { useWindowHeight, useWindowWidth, useIsMobile } from \"../util/Hooks\";\nimport \"./ResumePage.css\";\n\nlibrary.add(fab, fas);\n\nexport const ResumePage = () => {\n  const [windows, setWindows] = useState<ReactElement<WindowProps>[]>([]);\n  const commandProcessor = useContext(CommandContext);\n\n  const handleNew = () => {\n    const windowId = uuid.v4();\n\n    const terminal = (\n      <Terminal\n        welcome={windows.length === 0}\n        windowId={windowId}\n        prompt={\"guest@tc\"}\n      />\n    );\n    const window = isMobile ? (\n      <FixedWindow\n        key={windowId}\n        windowId={windowId}\n        title={\"guest@tc:~\"}\n        style={{ width: \"90%\", height: \"90%\" }}\n      >\n        {terminal}\n      </FixedWindow>\n    ) : (\n        <Window\n          key={windowId}\n          windowId={windowId}\n          width={width}\n          height={height}\n          pos={{\n            x: (windowWidth / 2 - width / 2),\n            y: (windowHeight / 2 - height / 2),\n          }}\n          title={\"guest@tc:~\"}\n        >\n          {terminal}\n        </Window>\n      );\n\n    commandProcessor.registerExit(windowId, (id: string) => {\n      setWindows((windows) =>\n        windows.filter((e: any) => e.props.windowId !== id)\n      );\n      commandProcessor.unregisterExit(id);\n    });\n\n    setWindows([...windows, window]);\n  };\n\n  const handleNewCallback = useCallback(handleNew, [commandProcessor])\n\n  useEffect(() => {\n    handleNewCallback();\n  }, [handleNewCallback]);\n\n  useEffect(() => {\n    const loginCode = new URL(window.location.href).searchParams.get('login')\n    if (loginCode) {\n      commandProcessor.execute(\"\", \"login\", false, false, [loginCode])\n    }\n  }, [commandProcessor])\n\n  const windowWidth = useWindowWidth();\n  const windowHeight = useWindowHeight();\n  const isMobile = useIsMobile();\n\n  const area = windowWidth <= 1024 ? 0.95 : 0.6;\n  let width = area * windowWidth;\n  let height = area * windowHeight;\n\n  return (\n    <>\n      {!isMobile && (\n        <button className=\"newTerminal\" onClick={handleNew}>\n          <FontAwesomeIcon icon={[\"fas\", \"terminal\"]} size=\"2x\" />\n          Terminal\n        </button>\n      )}\n      <FocusGroup>{windows}</FocusGroup>\n    </>\n  );\n};\n","import { createBrowserHistory } from \"history\";\nimport React, { useRef, useState } from \"react\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Background } from \"./common/Background\";\nimport { CommandContext } from \"./Context\";\nimport { ResumePage } from \"./resume/ResumePage\";\nimport { CommandProcessorBuilder } from \"./services/Command\";\n\nfunction App() {\n  const appRef = useRef<HTMLDivElement>(null);\n  const [history] = useState(createBrowserHistory());\n\n  const style = {\n    backgroundColor: getComputedStyle(document.documentElement).getPropertyValue(\"--main-bg-color\"),\n    textColor: getComputedStyle(document.documentElement).getPropertyValue(\"--main-fg-color\"),\n    fontSize: 10\n  }\n\n  return (\n    <CommandContext.Provider value={CommandProcessorBuilder.build()}>\n      <Router history={history} >\n        <Background {...style} />\n        <div ref={appRef} className=\"App\">\n          <Switch>\n            <Route path=\"/\">\n              <ResumePage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </CommandContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./variables.css\";\nimport \"./index.css\";\nimport \"./animations.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}