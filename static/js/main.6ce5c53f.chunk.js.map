{"version":3,"sources":["util/Hooks.ts","common/Background.tsx","util/Encryption.ts","services/Command.ts","Context.tsx","common/FocusGroup.tsx","util/Helpers.ts","common/Terminal.tsx","common/Window.tsx","resume/ResumePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useWindowWidth","useState","window","innerWidth","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","useIsMobile","useWindowHeight","innerHeight","height","setHeight","Background","style","canvas","useRef","matrix","drops","backgroundState","setBackgroundState","currentCanvas","current","initializedState","c","ctx","getContext","split","columns","fontSize","rows","fillStyle","textColor","font","i","j","text","Math","floor","random","length","fillText","init","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","updatedState","state","backgroundColor","fillRect","update","ref","decrypt","encrypted","secret","AES","toString","enc","Utf8","e","StaticContentCommandProcessor","exitCallbacks","commandHistory","fetchAndDecrypt","command","mobile","key","a","fetch","content","startsWith","replace","url","then","r","status","handleLogin","args","sessionStorage","setItem","btoa","handleLogout","removeItem","handleExit","issuer","registerExit","unregisterExit","execute","track","atob","getItem","isCommandValid","trim","push","Promise","resolve","getAvailableCommands","getHistoryLength","getHistoryAtPos","pos","index","CommandProcessorBuilder","CommandContext","React","createContext","FocusGroup","props","selected","setSelected","children","setChildren","map","cloneElement","zIndex","windowId","onSelected","moveCursorToEnd","node","childNodes","range","document","createRange","sel","getSelection","setStart","hasChildNodes","collapse","removeAllRanges","addRange","console","warn","Terminal","prompt","welcomePrompt","setWelcomePrompt","historyPos","sethistoryPos","commands","setCommands","commandProcessor","useContext","welcome","focus","load","handleCommand","appendCommand","setAttribute","innerHTML","output","execCommand","lastElementChild","scrollIntoView","String","getCommandFromHistory","up","lastCommand","handleKeyDown","event","innerText","currentTarget","keyCode","trimEnd","endsWith","preventDefault","commandText","getCommand","parseCommand","elements","slice","substring","lastIndexOf","className","spellCheck","contentEditable","onKeyDown","onFocus","dangerouslySetInnerHTML","__html","onClick","Window","dragging","setDragging","x","y","rel","setRel","setPos","setState","resizing","setResizing","onWindowSelected","onMouseUp","onMouseMove","pageX","pageY","onTouchMove","changedTouches","unregisterListeners","left","top","onMouseDown","onTouchStart","size","onResizeStart","onResize","direction","_","delta","clientX","NaN","clientY","MouseEvent","touches","selection","onResizeStop","d","button","offsetLeft","offsetTop","calcRelMouseEvent","calcRelTouchEvent","title","overflow","FixedWindow","library","add","fab","fas","ResumePage","windows","setWindows","handleNew","uuid","terminal","isMobile","windowWidth","windowHeight","filter","handleNewCallback","useCallback","loginCode","URL","location","href","searchParams","get","area","icon","App","appRef","createBrowserHistory","history","getComputedStyle","documentElement","getPropertyValue","Provider","value","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","process","origin","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6ce5c53f.chunk.js","sourcesContent":["import { useRef, useEffect, useState } from \"react\";\r\n\r\nexport function useInterval(callback: () => void, delay: number) {\r\n  const savedCallback = useRef<() => void>(callback);\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport function useWindowWidth() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  });\r\n\r\n  return width;\r\n}\r\n\r\nexport function useIsMobile() {\r\n  return useWindowWidth() < 600\r\n}\r\n\r\nexport function useWindowHeight() {\r\n  const [height, setHeight] = useState(window.innerHeight);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setHeight(window.innerHeight);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  });\r\n\r\n  return height;\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useInterval, useWindowHeight, useWindowWidth } from \"../util/Hooks\";\r\nimport \"./Background.css\";\r\n\r\nconst CHARACTERS = \"ガノンの形態によってステップを分けた方がいいかも\";\r\n\r\ninterface BackgroundProps {\r\n  backgroundColor: string,\r\n  textColor: string,\r\n  fontSize: number\r\n}\r\n\r\ninterface BackgroundState {\r\n  matrix: string[],\r\n  drops: number[]\r\n}\r\n\r\nconst update = (c: HTMLCanvasElement, style: BackgroundProps, state: BackgroundState) => {\r\n  var ctx = c.getContext(\"2d\");\r\n\r\n  if (ctx == null) {\r\n    return { matrix: [], drops: []};\r\n  }\r\n\r\n  ctx.fillStyle = `rgba(${style.backgroundColor}, 0.04)`;\r\n  ctx.fillRect(0, 0, c.width, c.height);\r\n\r\n  ctx.fillStyle = `rgba(${style.textColor}, 1)`;\r\n  ctx.font = style.fontSize + \"px arial\";\r\n\r\n  for (let i = 0; i < state.drops.length; i++) {\r\n    const text = state.matrix[Math.floor(Math.random() * state.matrix.length)];\r\n\r\n    ctx.fillText(text, i * style.fontSize, state.drops[i] * style.fontSize);\r\n\r\n    if (state.drops[i] * style.fontSize > c.height && Math.random() > 0.975) state.drops[i] = 0;\r\n\r\n    state.drops[i]++;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst init = (c: HTMLCanvasElement, style: BackgroundProps) => {\r\n  var ctx = c.getContext(\"2d\");\r\n\r\n  if (ctx == null) {\r\n    return { matrix: [], drops: []};\r\n  }\r\n\r\n  const matrix: string[] = CHARACTERS.split(\"\");\r\n  const columns = c.width / style.fontSize;\r\n  const rows = c.height / style.fontSize;\r\n\r\n  const drops: number[] = [];\r\n\r\n  ctx.fillStyle = `rgba(${style.textColor}, 0.04)`;\r\n  ctx.font = style.fontSize + \"px arial\";\r\n\r\n  for (let i = 0; i < columns; i++) {\r\n    drops[i] = rows;\r\n\r\n    for (var j = 0; j < rows; j++) {\r\n      const text = matrix[Math.floor(Math.random() * matrix.length)];\r\n      ctx.fillText(text, i * style.fontSize, j * style.fontSize);\r\n    }\r\n  }\r\n\r\n  return { matrix, drops }\r\n}\r\n\r\nexport const Background = ( style : BackgroundProps) => {\r\n  \r\n  let canvas = useRef<HTMLCanvasElement>(null);\r\n  let width = useWindowWidth();\r\n  let height = useWindowHeight();\r\n  let [backgroundState, setBackgroundState] = useState<BackgroundState>({ matrix: [], drops: [] })\r\n\r\n  useEffect(() => {\r\n    const currentCanvas = canvas && canvas.current\r\n    if (currentCanvas) {\r\n      const initializedState = init(currentCanvas, style);\r\n      setBackgroundState(initializedState);\r\n    }\r\n  }, [style]);\r\n\r\n  useInterval(() => {\r\n    const currentCanvas = canvas && canvas.current\r\n    if (currentCanvas) {\r\n      const updatedState = update(currentCanvas, style, backgroundState);\r\n      setBackgroundState(updatedState)\r\n    }\r\n  }, 35);\r\n\r\n  return (\r\n    <canvas ref={canvas} id={`matrix`} width={width} height={height}></canvas>\r\n  );\r\n};\r\n","import { AES } from \"crypto-ts\";\r\nimport { enc } from \"crypto-ts\";\r\n\r\nexport const decrypt = (encrypted: string, secret: string) => {\r\n  try {\r\n    return AES.decrypt(encrypted, secret).toString(enc.Utf8);\r\n  } catch (e) {\r\n    return \"\";\r\n  }\r\n};\r\n","import { decrypt } from \"../util/Encryption\";\r\n\r\nexport interface CommandProcessor {\r\n  execute: (\r\n    issuer: string,\r\n    command: string,\r\n    mobile: boolean,\r\n    track: boolean,\r\n    args?: string[]\r\n  ) => Promise<string>;\r\n  getHistoryAtPos: (pos: number) => string | undefined;\r\n  getHistoryLength: () => number\r\n  getAvailableCommands: () => Promise<string[]>\r\n  registerExit: (issuer: string, callback: (issuer: string) => void) => void;\r\n  unregisterExit: (issuer: string) => void;\r\n}\r\n\r\nclass StaticContentCommandProcessor implements CommandProcessor {\r\n  exitCallbacks: { [key: string]: (issuer: string) => void } = {};\r\n  commandHistory: string[] = []\r\n  encrypted: string[] = [\"experience\", \"skills\", \"profile\", \"picture\", \"languages\"]\r\n\r\n  private fetchAndDecrypt = async (\r\n    command: string,\r\n    mobile: boolean,\r\n    key: string\r\n  ) => {\r\n    const content = await this.fetch(command, mobile);\r\n    if (content.startsWith(\"encrypted:\")) {\r\n      return decrypt(content.replace(\"encrypted:\", \"\"), key) || \"Unauthorized\";\r\n    }\r\n    return content;\r\n  };\r\n\r\n  private fetch = (command: string, mobile: boolean) => {\r\n    const url = mobile ? `./c_${command}_small.html` : `./c_${command}.html`;\r\n    return fetch(url).then((r) => r.status < 300 ? r.text() : `${command}: command not found<br/>`);\r\n  };\r\n\r\n  private handleLogin = async (args?: string[]) => {\r\n    if (args && args.length > 0) {\r\n      const result = await this.fetchAndDecrypt(\"check\", false, args[0]);\r\n      if (result === \"OK\") {\r\n        sessionStorage.setItem(\"aesKey\", btoa(args[0]));\r\n        return \"Login successful\"\r\n      }\r\n      return \"Unauthorized\";\r\n    }\r\n    return \"Usage: login [decrytionKey]\";\r\n  };\r\n\r\n  private handleLogout = (args?: string[]) => {\r\n    sessionStorage.removeItem(\"aesKey\");\r\n    return \"You are now logged out\";\r\n  };\r\n\r\n  private handleExit = (issuer: string) => {\r\n    const callback = this.exitCallbacks[issuer];\r\n    callback && callback(issuer);\r\n    return \"session closed\";\r\n  };\r\n\r\n  public registerExit = (\r\n    issuer: string,\r\n    callback: (issuer: string) => void\r\n  ) => {\r\n    this.exitCallbacks[issuer] = callback;\r\n  };\r\n\r\n  public unregisterExit = (issuer: string) => {\r\n    delete this.exitCallbacks[issuer];\r\n  };\r\n\r\n  public execute = async (\r\n    issuer: string,\r\n    command: string,\r\n    mobile: boolean,\r\n    track: boolean,\r\n    args?: string[]\r\n  ): Promise<string> => {\r\n    const key = atob(sessionStorage.getItem(\"aesKey\") || \"\");\r\n    const isCommandValid = command.trim() !== \"\"\r\n    if (track && isCommandValid) {\r\n      this.commandHistory.push(command);\r\n    }\r\n\r\n    switch (true) {\r\n      case command === \"login\":\r\n        return this.handleLogin(args);\r\n      case command === \"logout\":\r\n        return this.handleLogout(args);\r\n      case command === \"exit\":\r\n        return !mobile ? this.handleExit(issuer) : Promise.resolve(\"\");\r\n      default:\r\n        return this.fetchAndDecrypt(command, mobile, key);\r\n    }\r\n  };\r\n\r\n  public getAvailableCommands = async () => await fetch('./commands.txt')\r\n    .then((r) => r.status < 300 ? r.text() : '')\r\n    .then(text => text.split('\\n'));\r\n\r\n  public getHistoryLength = () => this.commandHistory.length\r\n\r\n  public getHistoryAtPos = (pos: number) => {\r\n    const index = this.commandHistory.length - 1 - pos;\r\n    if (index < 0) {\r\n      return undefined;\r\n    }\r\n    return this.commandHistory[index];\r\n  }\r\n}\r\n\r\nexport const CommandProcessorBuilder = {\r\n  build: (): CommandProcessor => {\r\n    return new StaticContentCommandProcessor();\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { CommandProcessor, CommandProcessorBuilder } from \"./services/Command\";\r\nexport const CommandContext = React.createContext<CommandProcessor>(\r\n  CommandProcessorBuilder.build()\r\n);\r\n","import React, { ReactElement, useState, useEffect } from \"react\";\r\n\r\ninterface Props {\r\n  children: ReactElement[];\r\n}\r\nexport const FocusGroup = (props: Props) => {\r\n  const [selected, setSelected] = useState<string>();\r\n  const [children, setChildren] = useState<ReactElement[]>([]);\r\n\r\n  useEffect(() => {\r\n    setChildren(props.children.map((c, i) =>\r\n      React.cloneElement(c, {\r\n        ...c.props,\r\n        style: {\r\n          ...c.props.style,\r\n          zIndex: c.props.windowId === selected ? 200 : 100 + i,\r\n        },\r\n        onSelected: (key: string) => {\r\n          setSelected(key);\r\n        },\r\n      })\r\n    ))  \r\n  }, [props.children, selected])\r\n\r\n  return (\r\n    <>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","\r\nexport const moveCursorToEnd = (e: HTMLDivElement | null) => {\r\n    if (e) {\r\n      try {\r\n        // get last line from the terminal\r\n        const node = e.childNodes[e.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        const sel = window.getSelection();\r\n        if (node) {\r\n          range.setStart(\r\n            node,\r\n            node.hasChildNodes() ? node.childNodes.length : 1\r\n          );\r\n          range.collapse(true);\r\n          sel && sel.removeAllRanges();\r\n          sel && sel.addRange(range);\r\n        }\r\n      } catch (e) {\r\n        console.warn(e);\r\n      }\r\n    }\r\n  };","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { CommandContext } from \"../Context\";\r\nimport { useIsMobile } from \"../util/Hooks\";\r\nimport \"./Terminal.css\";\r\nimport { moveCursorToEnd } from \"../util/Helpers\";\r\n\r\nconst wrapPre = (text: string) => `<pre style=\"display: inline;\">${text}</pre>`;\r\n\r\nconst promptPath =\r\n  '<span class=\"white bold\">:</span>' +\r\n  '<span class=\"blue bold\">~</span>' +\r\n  '<span class=\"white bold\">$</span>';\r\n\r\nexport interface TerminalProps {\r\n  windowId: string;\r\n  prompt: string;\r\n  welcome: boolean;\r\n}\r\n\r\nexport const Terminal = (props: TerminalProps) => {\r\n  const server = `<span class=\"bold\">${props.prompt}</span>`;\r\n  const prompt = \"<span class=\\\"prompt\\\">\" + server + promptPath + wrapPre(\" \") + \"</span>\";\r\n\r\n  const [welcomePrompt, setWelcomePrompt] = useState<string>();\r\n  const [historyPos, sethistoryPos] = useState<number>(-1)\r\n  const [commands, setCommands] = useState<string[]>([]);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const commandProcessor = useContext(CommandContext);\r\n  const mobile = useIsMobile();\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      setWelcomePrompt(\r\n        props.welcome\r\n          ? `${await commandProcessor.execute(\r\n            props.windowId,\r\n            \"welcome\",\r\n            mobile,\r\n            false\r\n          )}<br/>`\r\n          : \"\"\r\n      );\r\n      setCommands(await commandProcessor.getAvailableCommands())\r\n      ref.current?.focus();\r\n      moveCursorToEnd(ref.current);\r\n    };\r\n    load();\r\n  }, [welcomePrompt, commandProcessor, props.welcome, props.windowId, mobile]);\r\n\r\n  const handleCommand = async (command: string, args: string[], appendCommand?: boolean) => {\r\n    command = command.trim()\r\n    ref.current?.setAttribute('contentEditable', \"true\")\r\n\r\n    switch (command) {\r\n      case \"clear\":\r\n        ref.current!.innerHTML = prompt;\r\n        break;\r\n      default:\r\n        let output = await commandProcessor.execute(\r\n          props.windowId,\r\n          command,\r\n          mobile,\r\n          true,\r\n          args\r\n        );\r\n\r\n        document.execCommand(\r\n          \"insertHTML\",\r\n          false,\r\n          `${appendCommand ? `<pre style=\"display: inline;\">${command}</pre>` : ''}<br/><div class=\"command-output\">${output}</div><br/>${prompt}`\r\n        );\r\n\r\n        if (ref && ref.current) {\r\n          ref.current.lastElementChild!.scrollIntoView();\r\n        }\r\n    }\r\n\r\n    ref.current?.setAttribute('contentEditable', String(!mobile))\r\n\r\n    sethistoryPos(-1)\r\n    moveCursorToEnd(ref.current);\r\n  };\r\n\r\n  const getCommandFromHistory = (up: boolean) => {\r\n\r\n    let pos = historyPos\r\n    if (up && historyPos < commandProcessor.getHistoryLength() - 1) {\r\n      pos = historyPos + 1\r\n    } else if (!up && historyPos >= 0) {\r\n      pos = historyPos - 1\r\n    }\r\n\r\n    if (ref.current && ref.current.children && ref.current.children.length > 0) {\r\n      const lastCommand = commandProcessor.getHistoryAtPos(pos)\r\n      const currentContent = ref.current!.children[ref.current?.children!.length - 1]\r\n      currentContent.innerHTML = prompt + (lastCommand || \"\")\r\n      if (ref && ref.current) {\r\n        ref.current.lastElementChild!.scrollIntoView();\r\n      }\r\n      moveCursorToEnd(ref.current);\r\n    }\r\n\r\n    sethistoryPos(pos)\r\n  }\r\n\r\n  const handleKeyDown = async (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    const innerText = event.currentTarget.innerText;\r\n    switch (event.keyCode) {\r\n      case 8:\r\n      case 37:\r\n        if (innerText.trimEnd().endsWith(`${props.prompt}:~$`)) {\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n      case 13:\r\n        const commandText = getCommand(innerText);\r\n        const command = parseCommand(commandText);\r\n        event.preventDefault();\r\n        await handleCommand(command.command, command.args);\r\n        break;\r\n      case 38:\r\n        getCommandFromHistory(true);\r\n        event.preventDefault();\r\n        break;\r\n      case 40:\r\n        getCommandFromHistory(false);\r\n        event.preventDefault();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const parseCommand = (commandText: string) => {\r\n    const elements = commandText.split(\" \");\r\n    if (elements.length <= 0) return { command: \"\", args: [] };\r\n    return {\r\n      command: elements[0],\r\n      args: elements.slice(1).map((e) => e.trim()),\r\n    };\r\n  };\r\n\r\n  const getCommand = (innerText: string) => {\r\n    return innerText\r\n      .substring(\r\n        innerText.lastIndexOf(`${props.prompt}:~$`) +\r\n        `${props.prompt}:~$`.length\r\n      )\r\n      .trim();\r\n  };\r\n\r\n  return (\r\n    <div className=\"terminal\">\r\n      <div\r\n        ref={ref}\r\n        spellCheck=\"false\"\r\n        className=\"terminal-input\"\r\n        contentEditable={!mobile}\r\n        onKeyDown={handleKeyDown}\r\n        onFocus={() => {\r\n          moveCursorToEnd(ref.current);\r\n        }}\r\n        dangerouslySetInnerHTML={{ __html: `${welcomePrompt}${prompt}` }}\r\n      ></div>\r\n      <div className=\"commands\">\r\n        {commands.map(command => <button key={command} onClick={() => handleCommand(command, [], true)}>{command}</button>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Resizable } from \"re-resizable\";\r\nimport React, {\r\n  CSSProperties,\r\n  ReactNode,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  Key,\r\n} from \"react\";\r\nimport \"./Window.css\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\nimport SimpleBar from \"simplebar-react\";\r\n\r\nexport interface WindowProps {\r\n  width?: number;\r\n  height?: number;\r\n  windowId: string;\r\n  title?: string;\r\n  onSelected?: (key?: Key) => void;\r\n  pos?: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  children?: ReactNode;\r\n  style?: CSSProperties;\r\n  resizing?: boolean;\r\n}\r\n\r\nexport const Window = (props: WindowProps) => {\r\n  const ref: React.RefObject<HTMLDivElement> = useRef(null);\r\n  const [dragging, setDragging] = useState(false);\r\n  const [rel, setRel] = useState({ x: 0, y: 0 });\r\n  const [pos, setPos] = useState(props.pos || { x: 0, y: 0 });\r\n  const [state, setState] = useState({\r\n    width: props.width || 0,\r\n    height: props.height || 0,\r\n  });\r\n  const [resizing, setResizing] = useState(false);\r\n\r\n  const calcRelMouseEvent = (e: any) => {\r\n    const offsetLeft = ref.current?.offsetLeft || 0;\r\n    const offsetTop = ref.current?.offsetTop || 0;\r\n    return {\r\n      x: e.pageX - offsetLeft,\r\n      y: e.pageY - offsetTop,\r\n    };\r\n  };\r\n\r\n  const calcRelTouchEvent = (e: any) => {\r\n    const offsetLeft = ref.current?.offsetLeft || 0;\r\n    const offsetTop = ref.current?.offsetTop || 0;\r\n\r\n    if (e.changedTouches.length > 0) {\r\n      return {\r\n        x: e.changedTouches[0].pageX - offsetLeft,\r\n        y: e.changedTouches[0].pageY - offsetTop,\r\n      };\r\n    }\r\n    return { x: 0, y: 0 };\r\n  };\r\n\r\n  const onWindowSelected = () => {\r\n    if (props.onSelected) {\r\n      props.onSelected(props.windowId);\r\n    }\r\n  };\r\n\r\n  const onMouseDown = (e: any) => {\r\n    if (resizing) return;\r\n    if (e.button !== 0) return;\r\n    const rel = calcRelMouseEvent(e);\r\n    setDragging(true);\r\n    setRel(rel);\r\n  };\r\n\r\n  const onTouchStart = (e: any) => {\r\n    if (resizing) return;\r\n    const rel = calcRelTouchEvent(e);\r\n    setDragging(true);\r\n    setRel(rel);\r\n    if (props.onSelected) {\r\n      props.onSelected(props.windowId);\r\n    }\r\n  };\r\n\r\n  const onMouseUp = (e: any) => {\r\n    setDragging(false);\r\n  };\r\n\r\n  const onMouseMove = (e: any) => {\r\n    if (resizing) return;\r\n    if (!dragging) return;\r\n    setPos({\r\n      x: e.pageX - rel.x,\r\n      y: e.pageY - rel.y,\r\n    });\r\n  };\r\n\r\n  const onTouchMove = (e: any) => {\r\n    if (!dragging) return;\r\n    if (e.changedTouches.length > 0) {\r\n      setPos({\r\n        x: e.changedTouches[0].pageX - rel.x,\r\n        y: e.changedTouches[0].pageY - rel.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n    document.addEventListener(\"touchmove\", onTouchMove);\r\n\r\n    const registerListeners = () => {\r\n      document.addEventListener(\"mouseup\", onMouseUp);\r\n      document.addEventListener(\"touchend\", onMouseUp);\r\n    };\r\n\r\n    const unregisterListeners = () => {\r\n      document.removeEventListener(\"mouseup\", onMouseUp);\r\n      document.removeEventListener(\"touchend\", onMouseUp);\r\n    };\r\n\r\n    if (dragging) {\r\n      registerListeners();\r\n    } else {\r\n      unregisterListeners();\r\n    }\r\n    return () => {\r\n      unregisterListeners();\r\n      document.removeEventListener(\"mousemove\", onMouseMove);\r\n      document.removeEventListener(\"touchmove\", onTouchMove);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(props.onSelected) {\r\n      props.onSelected(props.windowId);\r\n    }\r\n   // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const createStyle = () => {\r\n    return { ...props.style, left: pos.x + \"px\", top: pos.y + \"px\" };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"window\"\r\n      style={createStyle()}\r\n      onMouseDown={onWindowSelected}\r\n      onTouchStart={onWindowSelected}\r\n    >\r\n      <Resizable\r\n        className=\"resizable\"\r\n        size={{ width: state.width, height: state.height }}\r\n        onResizeStart={() => {\r\n          setResizing(true);\r\n        }}\r\n        onResize={(e: any, direction, _, delta) => {\r\n          let clientX = NaN;\r\n          let clientY = NaN;\r\n\r\n          if (e instanceof MouseEvent) {\r\n            clientX = e.clientX;\r\n            clientY = e.clientY;\r\n          }\r\n\r\n          if (e.touches && e.touches.length > 0) {\r\n            clientX = e.touches[0].clientX;\r\n            clientY = e.touches[0].clientY;\r\n          }\r\n\r\n          if (direction === \"left\" || direction === \"bottomLeft\") {\r\n            setPos({ x: clientX, y: pos.y });\r\n          }\r\n          if (direction === \"top\" || direction === \"topRight\") {\r\n            setPos({ x: pos.x, y: clientY });\r\n          }\r\n          if (direction === \"topLeft\") {\r\n            setPos({ x: clientX, y: clientY });\r\n          }\r\n\r\n          const selection = window.getSelection();\r\n          if (selection) {\r\n            selection.removeAllRanges();\r\n          }\r\n        }}\r\n        onResizeStop={(e, direction, ref, d) => {\r\n          setState({\r\n            width: state.width + d.width,\r\n            height: state.height + d.height,\r\n          });\r\n          setResizing(false);\r\n        }}\r\n      >\r\n        <div className=\"container\">\r\n          <div\r\n            className=\"titlebar noselect\"\r\n            onMouseDown={onMouseDown}\r\n            onTouchStart={onTouchStart}\r\n          >\r\n            {props.title}\r\n          </div>\r\n          <SimpleBar\r\n            className=\"content\"\r\n            style={{ overflow: resizing ? \"hidden\" : \"auto\" }}\r\n          >\r\n            {props.children}\r\n          </SimpleBar>\r\n        </div>\r\n      </Resizable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FixedWindow = (props: WindowProps) => {\r\n  return (\r\n    <div className=\"window\" style={props.style}>\r\n      <div className=\"container\">\r\n        <div className=\"titlebar noselect\">{props.title}</div>\r\n        <SimpleBar className=\"content\">{props.children}</SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { ReactElement, useContext, useEffect, useState, useCallback } from \"react\";\r\nimport * as uuid from \"uuid\";\r\nimport { FocusGroup } from \"../common/FocusGroup\";\r\nimport { Terminal } from \"../common/Terminal\";\r\nimport { Window, WindowProps, FixedWindow } from \"../common/Window\";\r\nimport { CommandContext } from \"../Context\";\r\nimport { useWindowHeight, useWindowWidth, useIsMobile } from \"../util/Hooks\";\r\nimport \"./ResumePage.css\";\r\n\r\nlibrary.add(fab, fas);\r\n\r\nexport const ResumePage = () => {\r\n  const [windows, setWindows] = useState<ReactElement<WindowProps>[]>([]);\r\n  const commandProcessor = useContext(CommandContext);\r\n\r\n  const handleNew = () => {\r\n    const windowId = uuid.v4();\r\n\r\n    const terminal = (\r\n      <Terminal\r\n        welcome={windows.length === 0}\r\n        windowId={windowId}\r\n        prompt={\"guest@tc\"}\r\n      />\r\n    );\r\n    const window = isMobile ? (\r\n      <FixedWindow\r\n        key={windowId}\r\n        windowId={windowId}\r\n        title={\"guest@tc:~\"}\r\n        style={{ width: \"90%\", height: \"90%\" }}\r\n      >\r\n        {terminal}\r\n      </FixedWindow>\r\n    ) : (\r\n        <Window\r\n          key={windowId}\r\n          windowId={windowId}\r\n          width={width}\r\n          height={height}\r\n          pos={{\r\n            x: (windowWidth / 2 - width / 2),\r\n            y: (windowHeight / 2 - height / 2),\r\n          }}\r\n          title={\"guest@tc:~\"}\r\n        >\r\n          {terminal}\r\n        </Window>\r\n      );\r\n\r\n    commandProcessor.registerExit(windowId, (id: string) => {\r\n      setWindows((windows) =>\r\n        windows.filter((e: any) => e.props.windowId !== id)\r\n      );\r\n      commandProcessor.unregisterExit(id);\r\n    });\r\n\r\n    setWindows([...windows, window]);\r\n  };\r\n\r\n  const handleNewCallback = useCallback(handleNew, [commandProcessor])\r\n\r\n  useEffect(() => {\r\n    handleNewCallback();\r\n  }, [handleNewCallback]);\r\n\r\n  useEffect(() => {\r\n    const loginCode = new URL(window.location.href).searchParams.get('login')\r\n    if (loginCode) {\r\n      commandProcessor.execute(\"\", \"login\", false, false, [loginCode])\r\n    }\r\n  }, [commandProcessor])\r\n\r\n  const windowWidth = useWindowWidth();\r\n  const windowHeight = useWindowHeight();\r\n  const isMobile = useIsMobile();\r\n\r\n  const area = windowWidth <= 1024 ? 0.95 : 0.6;\r\n  let width = area * windowWidth;\r\n  let height = area * windowHeight;\r\n\r\n  return (\r\n    <>\r\n      {!isMobile && (\r\n        <button className=\"newTerminal\" onClick={handleNew}>\r\n          <FontAwesomeIcon icon={[\"fas\", \"terminal\"]} size=\"2x\" />\r\n          Terminal\r\n        </button>\r\n      )}\r\n      <FocusGroup>{windows}</FocusGroup>\r\n    </>\r\n  );\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Route, Router, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { Background } from \"./common/Background\";\r\nimport { CommandContext } from \"./Context\";\r\nimport { ResumePage } from \"./resume/ResumePage\";\r\nimport { CommandProcessorBuilder } from \"./services/Command\";\r\n\r\nfunction App() {\r\n  const appRef = useRef<HTMLDivElement>(null);\r\n  const [history] = useState(createBrowserHistory());\r\n\r\n  const style = {\r\n    backgroundColor: getComputedStyle(document.documentElement).getPropertyValue(\"--main-bg-color\"),\r\n    textColor: getComputedStyle(document.documentElement).getPropertyValue(\"--main-fg-color\"),\r\n    fontSize: 10\r\n  }\r\n\r\n  return (\r\n    <CommandContext.Provider value={CommandProcessorBuilder.build()}>\r\n      <Router history={history} >\r\n        <Background {...style} />\r\n        <div ref={appRef} className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <ResumePage />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </CommandContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./variables.css\";\r\nimport \"./index.css\";\r\nimport \"./animations.css\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}